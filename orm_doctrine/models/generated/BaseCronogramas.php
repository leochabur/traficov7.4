<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cronogramas', 'doctrine');

/**
 * BaseCronogramas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_estructura
 * @property string $nombre
 * @property integer $km
 * @property integer $id_cliente
 * @property integer $id_estructura_cliente
 * @property integer $vacio
 * @property integer $activo
 * @property time $tiempo_viaje
 * @property integer $ciudades_id_origen
 * @property integer $ciudades_id_estructura_origen
 * @property integer $ciudades_id_destino
 * @property integer $ciudades_id_estructura_destino
 * @property integer $claseServicio_id
 * @property integer $claseServicio_id_estructura
 * @property integer $id_cliente_vacio
 * @property integer $id_estructura_cliente_vacio
 * @property Clientes $Clientes
 * @property Clientes $Clientes_2
 * @property Ciudades $Ciudades
 * @property Ciudades $Ciudades_4
 * @property Ciudades $Ciudades_5
 * @property Ciudades $Ciudades_6
 * @property Claseservicio $Claseservicio
 * @property Claseservicio $Claseservicio_8
 * @property Doctrine_Collection $Licenciasxcronograma
 * @property Doctrine_Collection $Licenciasxcronograma_2
 * @property Doctrine_Collection $Peajesporcronogramas
 * @property Doctrine_Collection $Peajesporcronogramas_4
 * @property Doctrine_Collection $Servicios
 * @property Doctrine_Collection $Servicios_2
 * @property Doctrine_Collection $Vtvporcronograma
 * @property Doctrine_Collection $Vtvporcronograma_5
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCronogramas extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cronogramas');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_estructura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 105, array(
             'type' => 'string',
             'length' => 105,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('km', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_cliente', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura_cliente', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('vacio', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('activo', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('tiempo_viaje', 'time', null, array(
             'type' => 'time',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ciudades_id_origen', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ciudades_id_estructura_origen', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ciudades_id_destino', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('ciudades_id_estructura_destino', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('claseServicio_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('claseServicio_id_estructura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_cliente_vacio', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura_cliente_vacio', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Clientes', array(
             'local' => 'id_cliente_vacio',
             'foreign' => 'id'));

        $this->hasOne('Clientes as Clientes_2', array(
             'local' => 'id_estructura_cliente_vacio',
             'foreign' => 'id_estructura'));

        $this->hasOne('Ciudades', array(
             'local' => 'ciudades_id_origen',
             'foreign' => 'id'));

        $this->hasOne('Ciudades as Ciudades_4', array(
             'local' => 'ciudades_id_estructura_origen',
             'foreign' => 'id_estructura'));

        $this->hasOne('Ciudades as Ciudades_5', array(
             'local' => 'ciudades_id_destino',
             'foreign' => 'id'));

        $this->hasOne('Ciudades as Ciudades_6', array(
             'local' => 'ciudades_id_estructura_destino',
             'foreign' => 'id_estructura'));

        $this->hasOne('Claseservicio', array(
             'local' => 'claseServicio_id',
             'foreign' => 'id'));

        $this->hasOne('Claseservicio as Claseservicio_8', array(
             'local' => 'claseServicio_id_estructura',
             'foreign' => 'id_estructura'));

        $this->hasMany('Licenciasxcronograma', array(
             'local' => 'id',
             'foreign' => 'id_cronograma'));

        $this->hasMany('Licenciasxcronograma as Licenciasxcronograma_2', array(
             'local' => 'id_estructura',
             'foreign' => 'id_estructura_cronograma'));

        $this->hasMany('Peajesporcronogramas', array(
             'local' => 'id',
             'foreign' => 'id_cronograma'));

        $this->hasMany('Peajesporcronogramas as Peajesporcronogramas_4', array(
             'local' => 'id_estructura',
             'foreign' => 'id_estructura_cronograma'));

        $this->hasMany('Servicios', array(
             'local' => 'id',
             'foreign' => 'id_cronograma'));

        $this->hasMany('Servicios as Servicios_2', array(
             'local' => 'id_estructura',
             'foreign' => 'id_estructura_cronograma'));

        $this->hasMany('Vtvporcronograma', array(
             'local' => 'id',
             'foreign' => 'id_cronograma'));

        $this->hasMany('Vtvporcronograma as Vtvporcronograma_5', array(
             'local' => 'id_estructura',
             'foreign' => 'id_estructura_cronograma'));
    }
}