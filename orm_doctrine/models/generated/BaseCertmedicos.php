<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Certmedicos', 'doctrine');

/**
 * BaseCertmedicos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_medico
 * @property integer $id_ctroAsis
 * @property integer $id_especialidad
 * @property integer $id_diagnostico
 * @property integer $id_empleado
 * @property integer $id_novedad
 * @property date $fecha_cert
 * @property date $vigente_hasta
 * @property string $observaciones
 * @property timestamp $fecha_alta_sistema
 * @property integer $usuario_alta
 * @property integer $activo
 * @property integer $id_estructura
 * @property Medicos $Medicos
 * @property Ctrosasistenciales $Ctrosasistenciales
 * @property Especialidades $Especialidades
 * @property Diagnosticos $Diagnosticos
 * @property Empleados $Empleados
 * @property Novedades $Novedades
 * @property Estructuras $Estructuras
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCertmedicos extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('certmedicos');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('id_medico', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_ctroAsis', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_especialidad', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_diagnostico', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_empleado', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_novedad', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_cert', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('vigente_hasta', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('observaciones', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_alta_sistema', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('usuario_alta', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('activo', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Medicos', array(
             'local' => 'id_medico',
             'foreign' => 'id'));

        $this->hasOne('Ctrosasistenciales', array(
             'local' => 'id_ctroAsis',
             'foreign' => 'id'));

        $this->hasOne('Especialidades', array(
             'local' => 'id_especialidad',
             'foreign' => 'id'));

        $this->hasOne('Diagnosticos', array(
             'local' => 'id_diagnostico',
             'foreign' => 'id'));

        $this->hasOne('Empleados', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasOne('Novedades', array(
             'local' => 'id_novedad',
             'foreign' => 'id'));

        $this->hasOne('Estructuras', array(
             'local' => 'id_estructura',
             'foreign' => 'id'));
    }
}