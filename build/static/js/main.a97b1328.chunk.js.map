{"version":3,"sources":["components/spinner.js","components/locatios.js","components/service.js","components/select.js","App.js","index.js"],"names":["Spinner","className","role","Location","props","interno","distance","console","log","data","address","distancia","tiempo","Service","servicio","nombre","id","hcitacion","origen","hsalida","hllegada","posUserlat","position","lat","posUserlon","lon","useState","loading","setLoading","setDistance","useEffect","posicionActual","a","axios","ApiGetLocationByVehicleResult","RespuestaOk","Resultado","Latitud","Longitud","long","post","latinterno","longinterno","latuser","longuserm","SelectServicios","servicios","setServicios","serv","setServ","posUser","setPosUser","recuperarServicios","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","onChange","target","s","find","element","value","map","srv","toUpperCase","App","Container","class","href","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a97b1328.chunk.js","sourcesContent":["\r\n\r\nconst Spinner = () => {\r\n\r\n    return (\r\n        \r\n            <>\r\n<div className=\"d-flex justify-content-center mt-5\">\r\n  <div className=\"spinner-border\" role=\"status\">\r\n    <span className=\"sr-only\"></span>\r\n  </div>\r\n</div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Spinner","const Location = (props) => {\r\n\r\n    const { interno, distance } = props\r\n    console.log(distance.data)\r\n    return (        \r\n            <>\r\n                <div className=\"card mt-5\">\r\n                    <p>Ubicacion actual: <span className=\"h6\">{distance.data.address}</span></p>\r\n                    <p>Ditancia hasta aqui: <span className=\"h6\">{distance.data.distancia}</span></p>\r\n                    <p>Tiempo hasta aqui: <span className=\"h6\">{distance.data.tiempo}</span></p>\r\n                </div>\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Location","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Spinner from './spinner';\r\nimport Location from './locatios';\r\n\r\nconst Service = (props) => {\r\n\r\n    const {id, nombre, hcitacion, hsalida, hllegada, origen, interno} = props.servicio\r\n\r\n    const posUserlat = props.position.lat\r\n\r\n    const posUserlon = props.position.lon\r\n\r\n    const [ error, setError] = useState(null)\r\n\r\n    const [ loading, setLoading ] = useState(false)\r\n\r\n    const [ distance, setDistance] = useState(null)\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        posicionActual()       \r\n\r\n    }, [props])\r\n\r\n    const posicionActual = async () => {\r\n        setLoading(true)\r\n\r\n        const { data }  = await axios('http://dev-masterbus.tech:8000/api/consultas/position/'+interno);\r\n        const { ApiGetLocationByVehicleResult } = data;\r\n        if (!ApiGetLocationByVehicleResult.RespuestaOk)\r\n        {     \r\n          return;                                    \r\n        }       \r\n\r\n        const { Resultado } = ApiGetLocationByVehicleResult\r\n        distancia(Resultado.Latitud, Resultado.Longitud)  \r\n    }\r\n\r\n\r\n    const distancia = async (lat, long) => {\r\n        console.log('calculando ', lat, '   ', long)\r\n        const distance = await axios.post('http://dev-masterbus.tech:8000/api/consultas/distance',\r\n                                         {\r\n                                            latinterno : posUserlat, \r\n                                            longinterno : posUserlon,\r\n                                            latuser : lat,\r\n                                            longuserm : long,                                             \r\n                                         });\r\n        setDistance(distance)\r\n        setLoading(false)\r\n    }\r\n\r\n    return (\r\n                <>\r\n                    <div className=\"card\">\r\n                        <h5 className=\"card-header\">{ nombre }</h5>\r\n                        <div className=\"card-body\">\r\n                            <p>Salio de: <span className=\"h5\">{ origen }</span> a las: <span className=\"h5\">{ hcitacion }</span></p>\r\n                            <p>Interno: <span className=\"h5\">{ interno } </span></p>\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        loading \r\n                                ? <Spinner/>\r\n                                : \r\n                                    distance \r\n                                            ? <Location interno={interno} distance={distance} />\r\n                                            : ''\r\n                                  \r\n                    }\r\n                    \r\n                </>\r\n            );\r\n}\r\n\r\nexport default Service;","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Service from './service';\r\nimport Spinner from './spinner';\r\n\r\n\r\n\r\nfunction SelectServicios() {\r\n\r\n    const [ servicios, setServicios] = useState([]);\r\n\r\n    const [serv, setServ] = useState(null);\r\n\r\n    const [ posUser, setPosUser] = useState({});\r\n\r\n\r\n\r\n    const getLocation = () => {\r\n        if (!navigator.geolocation) \r\n        {\r\n            \r\n        } \r\n        else \r\n        {\r\n         \r\n            navigator.geolocation.getCurrentPosition(({ coords }) => {                                                                                                        \r\n                                                                            setPosUser({ lat :coords.latitude, lon : coords.longitude });  \r\n                                                                          \r\n                                                                     }, \r\n                                                                     () => {\r\n                                                                              \r\n                                                                     });\r\n            \r\n        }                           \r\n    }\r\n\r\n    const recuperarServicios = async () => {\r\n        const { data } = await axios('http://dev-masterbus.tech:8000/api/consultas/ordenesnow/10');\r\n        setServicios(data)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        recuperarServicios();\r\n        getLocation();\r\n    }, []);\r\n\r\n\r\n    const handleChange = ({ target }) => {\r\n            const s = servicios.find(element => element.id == target.value);\r\n            setServ(s)\r\n    }\r\n    \r\n    console.log(servicios)\r\n    \r\n\r\n    return (\r\n            <>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-lg-6 col-sm-12\">\r\n                        <select className=\"form-control form-select\" onChange={ handleChange }>\r\n                            <option key='0' value='0'>Seleccione un servicio</option>\r\n                            { \r\n                                servicios.map((srv) => {\r\n                                                            return <option key={ srv.id } value={ srv.id }>{ srv.nombre.toUpperCase() }</option>\r\n                                                        }) \r\n                            }\r\n                            \r\n                \r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-lg-6 col-sm-12\">                     \r\n                            {   \r\n                                serv ?\r\n                                        <Service servicio={ serv } position={ posUser }/>\r\n                                        :\r\n                                        <h5>Seleccione un servicio</h5>\r\n\r\n                            }                            \r\n                    </div>\r\n                </div>\r\n            </>\r\n            \r\n        \r\n    );\r\n  }\r\n\r\n  export default SelectServicios;\r\n  ","import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SelectServicios from './components/select';\r\n\r\nimport Container from 'react-bootstrap/Container';;\r\n\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <nav class=\"navbar navbar-light bg-light\">\r\n        <a class=\"navbar-brand\" href=\"#\">\r\n                  <img src=\"./masterbus-log.png\"  alt=\"\"/>\r\n        </a>\r\n        <label>Sistema de arribo predictivo</label>\r\n      </nav>\r\n      <SelectServicios/>\r\n    </Container>\r\n          \r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}