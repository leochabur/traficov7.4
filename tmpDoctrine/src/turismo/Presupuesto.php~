<?php
use Doctrine\Common\Collections\ArrayCollection;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Component\Validator\Mapping\ClassMetadata;
use Symfony\Component\Validator\Validation;

use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;


require_once ('Cliente.php');
require_once ('CanalPedido.php');
require_once ('Viaje.php');

/**
 * @author Leo
 * @version 1.0
 * @created 07-mar.-2018 9:05:16 p. m.
 */
class Presupuesto
{

	var $id;
	var $cliente;
	var $fechaSolicitud;
	var $montoSIva;
	var $iva;
	var $montoFinal;
	var $fechaConfeccion;
	var $pagoAnticipado;
	var $fechaInforme;/*** Representa la fecha en la que se le comunica el presupuesto al cliente*/	
	var $canalPedido;/*** A traves de que medio se solicito (mail, telefono, pagina web)*/
	var $emiteComprobante;
	var $viajes;
	var $observaciones;
	private $usuario;
	private $nombreContacto;
	private $telefonoContacto;
	private $mailContacto;
	private $estructura;
	private $pax;
	private $eliminado;
	private $dateAction;
	private $confirmado;
	private $pagos;

	private $estado;


    public function __construct() {
        $this->viajes = new ArrayCollection();
        $this->pagos = new ArrayCollection();
    }

	public function setConfirmado($newVal)
	{
		$this->confirmado = $newVal;
	}

	public function getConfirmado()
	{
		return $this->confirmado;
	}  


	public function setDateAction($newVal)
	{
		$this->dateAction = $newVal;
	}

	public function getDateAction()
	{
		return $this->dateAction;
	}  

	public function setEliminado($newVal)
	{
		$this->eliminado = $newVal;
	}

	public function getEliminado()
	{
		return $this->eliminado;
	}  

	public function setPax($newVal)
	{
		$this->pax = $newVal;
	}

	public function getPax()
	{
		return $this->pax;
	}  


	public function setEstructura($newVal)
	{
		$this->estructura = $newVal;
	}

	public function getEstructura()
	{
		return $this->estructura;
	}  

	public function setObservaciones($newVal)
	{
		$this->observaciones = $newVal;
	}

	public function getObservaciones()
	{
		return $this->observaciones;
	}  

	public function setMailContacto($newVal)
	{
		$this->mailContacto = $newVal;
	}

	public function getMailContacto()
	{
		return $this->mailContacto;
	}  

	public function setTelefonoContacto($newVal)
	{
		$this->telefonoContacto = $newVal;
	}


	public function getTelefonoContacto()
	{
		return $this->telefonoContacto;
	}  

	public function setNombreContacto($newVal)
	{
		$this->nombreContacto = $newVal;
	}


	public function getNombreContacto()
	{
		return $this->nombreContacto;
	}    



	function getId()
	{
		return $this->id;
	}


	///
	public function getUsuario()
	{
		return $this->usuario;
	}

	/**
	 * 
	 * @param newVal
	 */
	public function setUsuario($newVal)
	{
		$this->usuario = $newVal;
	}
	////

	function getCliente()
	{
		return $this->cliente;
	}

	/**
	 * 
	 * @param newVal
	 */
	function setCliente($newVal)
	{
		$this->cliente = $newVal;
	}

	function getFechaSolicitud()
	{
		return $this->fechaSolicitud;
	}

	/**
	 * 
	 * @param newVal
	 */
	function setFechaSolicitud($newVal)
	{
		$this->fechaSolicitud = $newVal;
	}

	function getMontoSIva()
	{
		return $this->montoSIva;
	}

	/**
	 * 
	 * @param newVal
	 */
	function setMontoSIva($newVal)
	{
		$this->montoSIva = $newVal;
	}

	function getIva()
	{
		return $this->iva;
	}

	/**
	 * 
	 * @param newVal
	 */
	function setIva($newVal)
	{
		$this->iva = $newVal;
	}

	function getMontoFinal()
	{
		return $this->montoFinal;
	}

	/**
	 * 
	 * @param newVal
	 */
	function setMontoFinal($newVal)
	{
		$this->montoFinal = $newVal;
	}

	function getFechaConfeccion()
	{
		return $this->fechaConfeccion;
	}

	/**
	 * 
	 * @param newVal
	 */
	function setFechaConfeccion($newVal)
	{
		$this->fechaConfeccion = $newVal;
	}

	/**
	 * Representa la fecha en la que se le comunica el presupuesto al cliente
	 */
	function getFechaInforme()
	{
		return $this->fechaInforme;
	}

	/**
	 * Representa la fecha en la que se le comunica el presupuesto al cliente
	 * 
	 * @param newVal
	 */
	function setFechaInforme($newVal)
	{
		$this->fechaInforme = $newVal;
	}

	/**
	 * A traves de que medio se solicito (mail, telefono, pagina web)
	 */
	function getCanalPedido()
	{
		return $this->canalPedido;
	}

	/**
	 * A traves de que medio se solicito (mail, telefono, pagina web)
	 * 
	 * @param newVal
	 */
	function setCanalPedido($newVal)
	{
		$this->canalPedido = $newVal;
	}

	public function setViajes($newVal)
	{
		$this->viajes = $newVal;
	}

	public function getViajes()
	{
		return $this->viajes;
	}  	

    public function addViaje(Viaje $viaje)
    {
        $this->viajes[] = $viaje;
        $viaje->setPresupuesto($this);
    }

    public function setPagoAnticipado($newVal)
    {
    	$this->pagoAnticipado = $newVal;
    }	

    public function getPagoAnticipado()
    {
    	return $this->pagoAnticipado;
    }

    public function setEmiteComprobante($newVal)
    {
    	$this->emiteComprobante = $newVal;
    }

    public function getEmiteComprobante()
    {
    	return $this->emiteComprobante;
    }

    public static function loadValidatorMetadata(ClassMetadata $metadata)
    {
 		   $metadata->addPropertyConstraint('viajes', new Assert\Count(array(
            'min'        => 1,
            'minMessage' => 'Debe cargar al menos un servicio al presupuesto!!'
        )));
    } 

    public function setPagos($newVal)
    {
    	$this->pagos = $newVal;
    }

    public function getPagos()
    {
    	return $this->pagos;
    }    

    public function setPreUpdateAction()
    {
    	$this->dateAction = new \DateTime();
    	$this->eliminado = false;
    	$this->confirmado = false;
    	if (empty($this->montoSIva)){
    		$this->montoSIva = null;
    		$this->montoFinal = null;
    		$this->iva = null;
    	}
    } 

    public function existeViaje (Viaje $viaje)
    {
    	return $this->viajes->contains($viaje);
    }  


    /**
     * Add pago
     *
     * @param \MovimientoCredito $pago
     *
     * @return Presupuesto
     */
    public function addPago(\MovimientoCredito $pago)
    {
        $this->pagos[] = $pago;
    
        return $this;
    }

    /**
     * Remove pago
     *
     * @param \MovimientoCredito $pago
     */
    public function removePago(\MovimientoCredito $pago)
    {
        $this->pagos->removeElement($pago);
    }
    /**
     * @var \EstadoPresupuesto
     */
    


    /**
     * Set estado
     *
     * @param \EstadoPresupuesto $estado
     *
     * @return Presupuesto
     */
    public function setEstado(\EstadoPresupuesto $estado = null)
    {
        $this->estado = $estado;
    
        return $this;
    }

    /**
     * Get estado
     *
     * @return \EstadoPresupuesto
     */
    public function getEstado()
    {
        return $this->estado;
    }
}
