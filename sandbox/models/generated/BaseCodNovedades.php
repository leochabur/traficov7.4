<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CodNovedades', 'doctrine');

/**
 * BaseCodNovedades
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nov_text
 * @property string $disponibilidad
 * @property string $nombreVariable
 * @property float $puntaje
 * @property string $descripcion
 * @property integer $activa
 * @property integer $id_estructura
 * @property integer $afecta_diagrama
 * @property Estructuras $Estructuras
 * @property Doctrine_Collection $Codnovpormodulo
 * @property Doctrine_Collection $Codnovpormodulo_2
 * @property Doctrine_Collection $Francosdiarios
 * @property Doctrine_Collection $Novedades
 * @property Doctrine_Collection $NovedadesModificadas
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCodNovedades extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('cod_novedades');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('nov_text', 'string', 256, array(
             'type' => 'string',
             'length' => 256,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('disponibilidad', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombreVariable', 'string', 155, array(
             'type' => 'string',
             'length' => 155,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('puntaje', 'float', null, array(
             'type' => 'float',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('descripcion', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('activa', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'default' => '1',
             'autoincrement' => false,
             ));
        $this->hasColumn('afecta_diagrama', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Estructuras', array(
             'local' => 'id_estructura',
             'foreign' => 'id'));

        $this->hasMany('Codnovpormodulo', array(
             'local' => 'id',
             'foreign' => 'id_cod_novedad'));

        $this->hasMany('Codnovpormodulo as Codnovpormodulo_2', array(
             'local' => 'id_estructura',
             'foreign' => 'id_estructura_codnovedad'));

        $this->hasMany('Francosdiarios', array(
             'local' => 'id',
             'foreign' => 'id_novedad'));

        $this->hasMany('Novedades', array(
             'local' => 'id',
             'foreign' => 'id_novedad'));

        $this->hasMany('NovedadesModificadas', array(
             'local' => 'id',
             'foreign' => 'id_novedad'));
    }
}