<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Empleados', 'doctrine');

/**
 * BaseEmpleados
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_empleado
 * @property integer $legajo
 * @property string $domicilio
 * @property integer $id_ciudad
 * @property string $telefono
 * @property integer $id_nacionalidad
 * @property string $sexo
 * @property date $fechanac
 * @property string $tipodoc
 * @property string $nrodoc
 * @property string $cuil
 * @property blob $activo
 * @property integer $id_sector
 * @property integer $id_cargo
 * @property integer $id_empleador
 * @property date $inicio_relacion_laboral
 * @property string $apellido
 * @property string $nombre
 * @property string $login
 * @property string $password
 * @property integer $nivel_acceso
 * @property integer $contratado
 * @property timestamp $fecha_alta
 * @property date $fecha_ocupacional
 * @property integer $id_estructura
 * @property integer $id_estructura_empleador
 * @property integer $procesado
 * @property integer $id_estructura_cargo
 * @property integer $id_estructura_ciudad
 * @property integer $afectado_a_estructura
 * @property integer $borrado
 * @property integer $usuario_alta_provisoria
 * @property integer $usuario_alta_definitiva
 * @property timestamp $fecha_alta_definitiva
 * @property Empleadores $Empleadores
 * @property Empleadores $Empleadores_2
 * @property Doctrine_Collection $Accesosconductores
 * @property Doctrine_Collection $Certmedicos
 * @property Doctrine_Collection $Conductoresxcliente
 * @property Doctrine_Collection $Contratos
 * @property Doctrine_Collection $Ctactevacaciones
 * @property Doctrine_Collection $Examenes
 * @property Doctrine_Collection $Francosdiarios
 * @property Doctrine_Collection $Licenciaconductor
 * @property Doctrine_Collection $Novedades
 * @property Doctrine_Collection $NovedadesModificadas
 * @property Doctrine_Collection $Vacacionespersonal
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEmpleados extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('empleados');
        $this->hasColumn('id_empleado', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('legajo', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('domicilio', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_ciudad', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('telefono', 'string', 30, array(
             'type' => 'string',
             'length' => 30,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_nacionalidad', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('sexo', 'string', 1, array(
             'type' => 'string',
             'length' => 1,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fechanac', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipodoc', 'string', 3, array(
             'type' => 'string',
             'length' => 3,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nrodoc', 'string', 10, array(
             'type' => 'string',
             'length' => 10,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('cuil', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('activo', 'blob', null, array(
             'type' => 'blob',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_sector', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_cargo', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_empleador', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('inicio_relacion_laboral', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('apellido', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('nombre', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('login', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('password', 'string', 45, array(
             'type' => 'string',
             'length' => 45,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('nivel_acceso', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('contratado', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_alta', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_ocupacional', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura_empleador', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('procesado', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura_cargo', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('id_estructura_ciudad', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('afectado_a_estructura', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('borrado', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('usuario_alta_provisoria', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('usuario_alta_definitiva', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('fecha_alta_definitiva', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empleadores', array(
             'local' => 'id_empleador',
             'foreign' => 'id'));

        $this->hasOne('Empleadores as Empleadores_2', array(
             'local' => 'id_estructura_empleador',
             'foreign' => 'id_estructura'));

        $this->hasMany('Accesosconductores', array(
             'local' => 'id_empleado',
             'foreign' => 'id_conductor'));

        $this->hasMany('Certmedicos', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Conductoresxcliente', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Contratos', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Ctactevacaciones', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Examenes', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Francosdiarios', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Licenciaconductor', array(
             'local' => 'id_empleado',
             'foreign' => 'id_conductor'));

        $this->hasMany('Novedades', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('NovedadesModificadas', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));

        $this->hasMany('Vacacionespersonal', array(
             'local' => 'id_empleado',
             'foreign' => 'id_empleado'));
    }
}